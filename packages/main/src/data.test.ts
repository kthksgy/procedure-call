import { afterEach, beforeEach, describe, expect, test } from 'vitest';

import { call, handler, registerProcedure, reset } from './index';

/**
 * 送信関数
 * @param payloadString ペイロード文字列
 *
 * @description 自分自身に送信する。
 */
function post(payloadString: string) {
  handler(payloadString, function (payloadString) {
    handler(payloadString, function () {});
  });
}

describe('データ変換', function () {
  beforeEach(function () {
    registerProcedure('echo', function (value: any) {
      return value;
    });
  });

  afterEach(function () {
    reset();
  });

  test.each([
    ['', ''],
    ['abc', 'abc'],
    [0, 0],
    [+0, 0],
    [-0, 0],
    [123, 123],
    [-123, -123],
    [NaN, null],
    [Infinity, null],
    [-Infinity, null],
    [true, true],
    [false, false],
    [{}, {}],
    [
      {
        string1: '',
        string2: 'abc',
        number1: 1,
        number2: -1,
        boolean1: true,
        boolean2: false,
        object1: {},
        object2: {
          string1: '',
          string2: 'abc',
          number1: 1,
          number2: -1,
          boolean1: true,
          boolean2: false,
          object1: {},
          object2: {},
          array1: [],
          array2: [
            '',
            'abc',
            1,
            -1,
            true,
            false,
            {},
            {
              string1: '',
              string2: 'abc',
              number1: 1,
              number2: -1,
              boolean1: true,
              boolean2: false,
              object1: {},
              object2: {
                string1: '',
                string2: 'abc',
                number1: 1,
                number2: -1,
                boolean1: true,
                boolean2: false,
                object1: {},
                array1: [],
                null: null,
              },
              array1: [],
              null: null,
            },
            [],
            [
              '',
              'abc',
              1,
              -1,
              true,
              false,
              {},
              {
                string1: '',
                string2: 'abc',
                number1: 1,
                number2: -1,
                boolean1: true,
                boolean2: false,
                object1: {},
                object2: {
                  string1: '',
                  string2: 'abc',
                  number1: 1,
                  number2: -1,
                  boolean1: true,
                  boolean2: false,
                  object1: {},
                  array1: [],
                  null: null,
                },
                array1: [],
                null: null,
              },
              [],
              null,
            ],
            null,
          ],
          null: null,
        },
        array1: [],
        array2: [
          '',
          'abc',
          1,
          -1,
          true,
          false,
          {},
          {
            string1: '',
            string2: 'abc',
            number1: 1,
            number2: -1,
            boolean1: true,
            boolean2: false,
            object1: {},
            array1: [],
            null: null,
          },
          [],
          [
            '',
            'abc',
            1,
            -1,
            true,
            false,
            {},
            {
              string1: '',
              string2: 'abc',
              number1: 1,
              number2: -1,
              boolean1: true,
              boolean2: false,
              object1: {},
              array1: [],
              null: null,
            },
            [],
            null,
          ],
          null,
        ],
        null: null,
      },
      {
        string1: '',
        string2: 'abc',
        number1: 1,
        number2: -1,
        boolean1: true,
        boolean2: false,
        object1: {},
        object2: {
          string1: '',
          string2: 'abc',
          number1: 1,
          number2: -1,
          boolean1: true,
          boolean2: false,
          object1: {},
          object2: {},
          array1: [],
          array2: [
            '',
            'abc',
            1,
            -1,
            true,
            false,
            {},
            {
              string1: '',
              string2: 'abc',
              number1: 1,
              number2: -1,
              boolean1: true,
              boolean2: false,
              object1: {},
              object2: {
                string1: '',
                string2: 'abc',
                number1: 1,
                number2: -1,
                boolean1: true,
                boolean2: false,
                object1: {},
                array1: [],
                null: null,
              },
              array1: [],
              null: null,
            },
            [],
            [
              '',
              'abc',
              1,
              -1,
              true,
              false,
              {},
              {
                string1: '',
                string2: 'abc',
                number1: 1,
                number2: -1,
                boolean1: true,
                boolean2: false,
                object1: {},
                object2: {
                  string1: '',
                  string2: 'abc',
                  number1: 1,
                  number2: -1,
                  boolean1: true,
                  boolean2: false,
                  object1: {},
                  array1: [],
                  null: null,
                },
                array1: [],
                null: null,
              },
              [],
              null,
            ],
            null,
          ],
          null: null,
        },
        array1: [],
        array2: [
          '',
          'abc',
          1,
          -1,
          true,
          false,
          {},
          {
            string1: '',
            string2: 'abc',
            number1: 1,
            number2: -1,
            boolean1: true,
            boolean2: false,
            object1: {},
            array1: [],
            null: null,
          },
          [],
          [
            '',
            'abc',
            1,
            -1,
            true,
            false,
            {},
            {
              string1: '',
              string2: 'abc',
              number1: 1,
              number2: -1,
              boolean1: true,
              boolean2: false,
              object1: {},
              array1: [],
              null: null,
            },
            [],
            null,
          ],
          null,
        ],
        null: null,
      },
    ],
    [
      {
        number1: NaN,
        number2: Infinity,
        number3: -Infinity,
        symbol1: Symbol(),
        symbol2: Symbol(''),
        array1: [
          NaN,
          Infinity,
          -Infinity,
          Symbol(),
          Symbol(''),
          function () {},
          () => {},
          undefined,
        ],
        function1() {},
        function2: function () {},
        function3: () => {},
        undefined: undefined,
      },
      {
        number1: null,
        number2: null,
        number3: null,
        array1: [null, null, null, null, null, null, null, null],
      },
    ],
    [[], []],
    [
      [
        '',
        'abc',
        1,
        -1,
        true,
        false,
        {},
        {
          string1: '',
          string2: 'abc',
          number1: 1,
          number2: -1,
          boolean1: true,
          boolean2: false,
          object1: {},
          array1: [],
          null: null,
        },
        [],
        [
          '',
          'abc',
          1,
          -1,
          true,
          false,
          {},
          {
            string1: '',
            string2: 'abc',
            number1: 1,
            number2: -1,
            boolean1: true,
            boolean2: false,
            object1: {},
            array1: [],
            null: null,
          },
          [],
          null,
        ],
        null,
      ],
      [
        '',
        'abc',
        1,
        -1,
        true,
        false,
        {},
        {
          string1: '',
          string2: 'abc',
          number1: 1,
          number2: -1,
          boolean1: true,
          boolean2: false,
          object1: {},
          array1: [],
          null: null,
        },
        [],
        [
          '',
          'abc',
          1,
          -1,
          true,
          false,
          {},
          {
            string1: '',
            string2: 'abc',
            number1: 1,
            number2: -1,
            boolean1: true,
            boolean2: false,
            object1: {},
            array1: [],
            null: null,
          },
          [],
          null,
        ],
        null,
      ],
    ],
    [
      [
        NaN,
        Infinity,
        -Infinity,
        Symbol(),
        Symbol(''),
        {
          number1: NaN,
          number2: Infinity,
          number3: -Infinity,
          symbol1: Symbol(),
          symbol2: Symbol(''),
          array1: [
            NaN,
            Infinity,
            -Infinity,
            Symbol(),
            Symbol(''),
            function () {},
            () => {},
            undefined,
          ],
          function1() {},
          function2: function () {},
          function3: () => {},
          undefined: undefined,
        },
        function () {},
        () => {},
        undefined,
      ],
      [
        null,
        null,
        null,
        null,
        null,
        {
          number1: null,
          number2: null,
          number3: null,
          array1: [null, null, null, null, null, null, null, null],
        },
        null,
        null,
        null,
      ],
    ],
    [function () {}, undefined],
    [() => {}, undefined],
    [Symbol(), undefined],
    [Symbol(''), undefined],
    [null, null],
    [undefined, undefined],
  ])('%s', async function (value, expected) {
    expect.assertions(1);

    expect(await call('echo', value, post)).toStrictEqual(expected);
  });
});
